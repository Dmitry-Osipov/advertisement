<databaseChangeLog xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
                   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                   xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog
                   http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-4.1.xsd">
    <changeSet id="002-create-tables" author="dmitry">
        <sql>
            CREATE TABLE IF NOT EXISTS advertisement.users (
                id BIGINT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
                username VARCHAR(50) UNIQUE NOT NULL,
                password VARCHAR(255) NOT NULL,
                phone_number VARCHAR(32) NOT NULL,
                rating INTEGER DEFAULT 0,
                email VARCHAR(255) UNIQUE NOT NULL,
                boosted BOOLEAN DEFAULT FALSE,
                role VARCHAR(50) NOT NULL
            );

            CREATE TABLE IF NOT EXISTS advertisement.advertisements (
                id BIGINT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
                user_id INTEGER NOT NULL,
                price INTEGER DEFAULT 0,
                headline VARCHAR(50) NOT NULL,
                description TEXT NOT NULL,
                status VARCHAR(50) DEFAULT 'REVIEW',
                FOREIGN KEY (user_id) REFERENCES advertisement.users(id)
            );

            CREATE TABLE IF NOT EXISTS advertisement.comments (
                id BIGINT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
                advertisement_id INTEGER NOT NULL,
                user_id INTEGER NOT NULL,
                text TEXT NOT NULL,
                created_at TIMESTAMP default CURRENT_TIMESTAMP,
                FOREIGN KEY (advertisement_id) REFERENCES advertisement.advertisements(id),
                FOREIGN KEY (user_id) REFERENCES advertisement.users(id)
            );

            CREATE TABLE IF NOT EXISTS advertisement.messages (
                id BIGINT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
                advertisement_id INTEGER NOT NULL,
                sender_id INTEGER NOT NULL,
                recipient_id INTEGER NOT NULL,
                text TEXT NOT NULL,
                sent_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
                read BOOLEAN DEFAULT FALSE,
                FOREIGN KEY (advertisement_id) REFERENCES advertisement.advertisements (id),
                FOREIGN KEY (sender_id) REFERENCES advertisement.users (id),
                FOREIGN KEY (recipient_id) REFERENCES advertisement.users (id)
            );

            GRANT ALL PRIVILEGES ON ALL TABLES IN SCHEMA advertisement TO advertisement_user;
        </sql>
    </changeSet>
</databaseChangeLog>
